package com.mobile.ggc {		import flash.system.System;		import flash.events.EventDispatcher;	public class basePlayer extends EventDispatcher {		private var theDealer:ggDealer;		public var id:Number;		public var team:String;		public var currentView:Object = {};		public function basePlayer(_id:Number, _team:String) {			// constructor code			id = _id;			team = _team;		}						public function get view():*		{			return (currentView == null) ? false : currentView;		}				public function set dealer(d:ggDealer):void		{			theDealer = d;			theDealer.addEventListener(DealerEvent.ISSUE_DEALT, issueHandler);		}				public function set active(b:Boolean):void //this is true when it is this players "turn"		{			(b) ? beginTurn(): endTurn();		}				private function beginTurn():void		{			theDealer.addEventListener(DealerEvent.CARDS_DEALT, cardsHandler)			dispatchEvent(new PlayerEvent(PlayerEvent.HIT_ME, true, false, team));		}				private function endTurn():void		{			theDealer.removeEventListener(DealerEvent.CARDS_DEALT, cardsHandler);			currentView = null;		}				public function cardsHandler(e:DealerEvent):void  //override this function for card decision.		{			dispatchEvent(new PlayerEvent(PlayerEvent.VIEW_CHANGED));		}		public function issueHandler(e:DealerEvent):void  //override this function for issue group decision.		{			dispatchEvent(new PlayerEvent(PlayerEvent.VIEW_CHANGED));		}				public function submitVote(v:Boolean):void		{			dispatchEvent(new PlayerEvent(PlayerEvent.VOTE, false, false, v ));		}				public function submitDecision(id:Number):void		{			dispatchEvent(new PlayerEvent(PlayerEvent.DECISION, false, false, id ));		}						public function cleanup():void		{			theDealer.removeEventListener(DealerEvent.ISSUE_DEALT, issueHandler);		}				public function toObject():Object{			return new Object();					}	}	}