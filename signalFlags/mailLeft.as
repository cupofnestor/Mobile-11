package com.mobile.signalFlags {		import flash.events.*;	import flash.utils.Timer;		public class mailLeft extends dict_sect {		private var messages:XML;		private var sFromName:String;		private var sFromMail:String;		private var sToMail:String;		private var completeDur:Number;		public function mailLeft() {			// constructor code			addEventListener(Event.ADDED_TO_STAGE, init);		}						public function get data():Object		{			var ret:Object = new Object;			ret.fromName = sFromName;			ret.fromMail = sFromMail;			ret.toMail =  sToMail;			return ret;		}				public override function set cfg(val:XML):void		{			super.cfg = val;			messages = new XML(val.messages);			completeDur = val.completeTimer;			promptText = "name";				}				private function set promptText(s:String)		{			var msg:XMLList = messages.message.(@type == s);			var txtMsg:String = msg.toString();			this.prompt.text = msg[0].toString();			if (s != "complete"){				this.prompt.text +=  "\r"				this.prompt.text +=  "Then press Next"			}		}				private function init(e:Event):void		{			fromName.kbActive = true;			fromName.addEventListener("submit", fromNameSubmitted);			this.swingOn();		}				private function fromNameSubmitted(e:Event):void		{			fromName.removeEventListener("submit", fromNameSubmitted);			sFromName = e.target.data;						fromEmail.kbActive = true;			fromEmail.addEventListener("submit", fromEmailSubmitted);			promptText = "fromEmail";		}				private function fromEmailSubmitted(e:Event):void		{			fromEmail.removeEventListener("submit", fromEmailSubmitted);			sFromMail = e.target.data;			if (checkEmail(sFromMail)){				toEmail.kbActive = true;				toEmail.addEventListener("submit", toEmailSubmitted);				dispatchEvent(new Event("emailCorrect"));				promptText = "toEmail";			}			else{				resetFromEmail();				fromEmail.kbActive = true;				fromEmail.addEventListener("submit", fromEmailSubmitted);				dispatchEvent(new Event("emailError"));			}		}				private function resetFromEmail():void		{			fromEmail.clearField();		}		private function resetToEmail():void		{			toEmail.clearField();		}				private function toEmailSubmitted(e:Event):void		{			toEmail.removeEventListener("submit", toEmailSubmitted);			sToMail = e.target.data;						if (checkEmail(sToMail)){				dispatchEvent(new Event("emailCorrect"));				promptText = "complete";								var t:Timer = new Timer(completeDur, 1);				t.addEventListener(TimerEvent.TIMER_COMPLETE, timerHandler);				t.start();			}			else{				resetToEmail();				toEmail.kbActive = true;				toEmail.addEventListener("submit", toEmailSubmitted);				dispatchEvent(new Event("emailError"));			}					}				private function timerHandler(t:Event):void		{			t.target.stop();			dispatchEvent(new Event("emailComplete"));		}				 public static function checkEmail ( s:String ):Boolean		 {			  var regExpPattern : RegExp =/^[0-9a-zA-Z][-._a-zA-Z0-9]*@([0-9a-zA-Z][-._0-9a-zA-Z]*\.)+[a-zA-Z]{2,4}$/;				  if( s.match(regExpPattern) == null )			  {				   return false;			  }			  else			  {				   return true;			  }	  		}	}	}