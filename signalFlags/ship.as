package com.mobile.signalFlags {		import flash.display.MovieClip;	import fl.transitions.*;	import fl.transitions.easing.*;	import fl.motion.easing.*;	import flash.filters.*;	import caurina.transitions.*;	import flash.events.KeyboardEvent ;	import flash.events.Event;	import com.nestor.elements.soundLoop;		public class ship extends MovieClip {		var totalFlags:int=10;		var spacing:Number = 10;		var flag_meta:MovieClip;		var flagArray:Array = [];		var poleArray:Array = new Array();		var n:Number=0;		var poleI:Number=0;		var mesArray:Array = new Array();		var flagCheck:Boolean = false;		var sea:soundLoop;		var creak:soundLoop;		//add To config???		var seaSound:String="snd/sea.mp3"		var seaV:Number=0.3;				var creakSound:String="snd/creak.mp3"		var creakV:Number=0.3;				//add to config		var doubleErrorH:String = "Sorry...";		var doubleErrorB:String = "You've already used this flag.  You only have one set of flags to compose your message, you must use REPEATER flags to repeat a character.  For more information, please push the button marked 'Explore the Flags.'";						public function ship() {			// constructor code												sea = new soundLoop(seaSound,seaV);			sea.addEventListener(Event.COMPLETE,sndReady);						creak = new soundLoop(creakSound,creakV);			creak.addEventListener(Event.COMPLETE,sndReady);						addEventListener(Event.ADDED_TO_STAGE, init);		}				private function sndReady(e:Event):void		{			e.target.startLoop();								}						private function init(e:Event):void		{			poleArray = [this.pole1,this.pole2];			poleArray[poleI].addEventListener("poleFull", nextPole);			paper_mc.alpha=0;		}				public function addFlag(event:KeyboardEvent):void{			//trace("::SHIP:: keypressed");			//stage.removeEventListener(KeyboardEvent.KEY_DOWN, keyDownHandler);			var keyPressed:String = String.fromCharCode(event.charCode);							for each (var str:String in mesArray) { 				flagCheck = (str == keyPressed) ? true : false;							} 						if (flagCheck == false){				//trace("::SHIP:: flagCheck = "+flagCheck);				//mesArray[n] = keyPressed;				////trace (mesArray);				//test for pole full, replace with event listener				//poleI = (n<5) ? poleI = 0 : poleI=1;				mesArray.push(keyPressed);				poleArray[poleI].addFlag(keyPressed);											}			else if (flagCheck == true){				paperMessage(doubleErrorH,doubleErrorB);				//var thisPaper:paper = new paper(doubleErrorH,doubleErrorB);				//addChild(thisPaper);				//thisPaper.addEventListener("paperOff", paperOffHandler);				//trace("::SHIP:: Double Letter");				/*paper_mc.paper_text_mc.paper_header.text = "Sorry...";				paper_mc.paper_text_mc.paper_body.text = "You've already used this flag.  You only have one set of flags to compose your message, you must use REPEATER flags to repeat a character.  For more information, please push the button marked 'Explore the Flags.'";				Tweener.addTween(paper_mc,	{				alpha:1,				transition:"easeInSine",				time:1});				Tweener.addTween(paper_mc,	{				delay:6,				alpha:0,				time:1,				transition:"easeOutSine",				onComplete:resetHandler});*/							}		}		private function paperOffHandler(p:Event):void		{			var pt:paper = p.target as paper			pt.removeEventListener("paperOff", paperOffHandler);			removeChild(pt);			resetHandler();		}		function resetHandler():void{			dispatchEvent(new Event("resetKeyboard", true));		}				private function nextPole(e:Event):void		{			poleArray[poleI].removeEventListener("poleFull", nextPole);			poleI++;			poleArray[poleI].addEventListener("poleFull", messageComplete);			dispatchEvent(new Event("resetKeyboard",true));		}		function messageComplete(e:Event):void		{			dispatchEvent(new Event("messageComplete"));			var thisPaper:paper = new paper(doubleErrorH,doubleErrorB);			addChild(thisPaper);			paperMessage("Congratulations...","Your message is complete! To view and send your message via email, press any key.",99000);			//paper_mc.paper_text_mc.paper_header.text = "Congratulations...";			//paper_mc.paper_text_mc.paper_body.text = "Your message is complete! To view and send your message via email, press any key.";			/*Tweener.addTween(paper_mc,	{				alpha:1,				transition:"easeInSine",			time:1			});*/		}				private function paperMessage(head:String,body:String,time:Number=2000):void		{			var thisPaper:paper = new paper(head,body,time);			addChild(thisPaper);			thisPaper.addEventListener("paperOff", paperOffHandler);		}									}	}//OG CODE/*																	*/