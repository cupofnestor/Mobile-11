package com.mobile.signalFlags {		import flash.display.MovieClip;	import flash.events.KeyboardEvent;	import flash.events.Event;	import flash.display.BitmapData;	//remove	public class master extends MovieClip {		var keyboardActive:Boolean=true;		var painting:ship = new ship();		var mess:paper;		var card:finished_card;		public function master() {			// constructor code			//replace with keyboard dispatch from custom class						setupPainting();			}				private function setupPainting():void		{			addChildAt(painting,0);			stage.addEventListener(KeyboardEvent.KEY_DOWN, paintingActive);			mess = painting.paperMessage("Use the flags to create your own message. Then email it to yourself or to a friend.","Traditionally only one mast and only five flags would be used. You can use up to ten flags on two masts for your message. When you're done press Next. Press Delete if you want to delete a flag. Press Exit if you want to exit. \r \r Press any key to continue",2000, false);					}				private function paintingActive(k:KeyboardEvent):void		{			mess.off();			stage.removeEventListener(KeyboardEvent.KEY_DOWN, paintingActive);			painting.addEventListener("messageComplete", messageCompleteHandler );			stage.addEventListener(KeyboardEvent.KEY_DOWN, keyDownHandler);		}				private function keyDownHandler(k:KeyboardEvent):void		{			stage.removeEventListener(KeyboardEvent.KEY_DOWN, keyDownHandler);			//trace("::MASTER:: Keyboard Event:"+k);			(keyboardActive) ? painting.addFlag(k) : null;			painting.addEventListener("resetKeyboard", resetKeyboard);		}						private function resetKeyboard(e:Event):void		{			//trace("::MASTER:: Keyboard reset");			stage.addEventListener(KeyboardEvent.KEY_DOWN, keyDownHandler);		}				private function messageCompleteHandler(e:Event):void		{			//trace("MASTER :: messageComplete");			mess = painting.paperMessage("Congratulations...","Your message is complete! To view and send your message via email, press any key.",99000,false);			painting.addEventListener("resetKeyboard", resetKeyboard);			stage.removeEventListener(KeyboardEvent.KEY_DOWN, keyDownHandler);			painting.removeEventListener("messageComplete", messageCompleteHandler );			stage.addEventListener(KeyboardEvent.KEY_DOWN, submitMessage);		}				private function submitMessage(e:Event):void		{			stage.removeEventListener(KeyboardEvent.KEY_DOWN, submitMessage);			mess.addEventListener("paperOff", makeCard);			mess.off();		}				private function makeCard(e:Event):void		{			//trace("::MASTER :: Send Message Method");			mess.removeEventListener("paperOff", makeCard);			stage.removeEventListener(KeyboardEvent.KEY_DOWN, keyDownHandler);			mess = null;			card = new finished_card(painting.snap());			addChild(card);			mess = painting.paperMessage("The End, for now","The message preview has been created, the next step is to add Email-ability.  \r \r  His [ESC] to reset.",99000,false);			stage.addEventListener(KeyboardEvent.KEY_DOWN, TMPresetHandler);		}				public function TMPresetHandler(e:KeyboardEvent):void		{			stage.removeEventListener(KeyboardEvent.KEY_DOWN, TMPresetHandler);			trace("::MAIN:: TMPresetHandler::"+e);								(e.charCode == 27) ? exitHandler(e) : stage.addEventListener(KeyboardEvent.KEY_DOWN, TMPresetHandler);;							}				private function exitHandler(e:Event):void		{			card.off();			card.addEventListener("cardOff",killCard);			removeChild(painting);			painting = new ship();			setupPainting();		}				private function killCard(e:Event):void		{			removeChild(card);			card = null;					}									}	}