package  {		import wck.*;	import flash.events.*;	import Box2DAS.Common.*;	import flash.utils.*;	import flash.geom.*;		import Box2DAS.*;	import Box2DAS.Collision.*;	import Box2DAS.Collision.Shapes.*;	import Box2DAS.Common.*;	import Box2DAS.Dynamics.*;	import Box2DAS.Dynamics.Contacts.*;	import Box2DAS.Dynamics.Joints.*;	import cmodule.Box2D.*;	import wck.*;	import misc.*;	import flash.utils.*;	import flash.events.*;	import flash.display.*;	import flash.text.*;	import flash.geom.*;	import flash.ui.*;	import gravity.Gravity;		public class thisWorld extends wck.World {		var numItems:Number = 6;		var theItems:Array = new Array();		var lastI:Number;		var thisI:item;						public function thisWorld() {			// constructor code												for (var i:Number = 0; i <= numItems; i++)			{				var tmpItem:item = new item();								var lastI = theItems.push(tmpItem);				tmpItem.x=(Math.random()*100)/50;				tmpItem.y=(Math.random()*100)/50;				addChild(tmpItem);				tmpItem.addEventListener(MouseEvent.RIGHT_MOUSE_UP, rightClickHandler);				tmpItem.addEventListener(MouseEvent.MOUSE_DOWN, mouseDownHandler);				tmpItem.addEventListener("recreate", recreateHandler);			}						thisI = theItems[lastI-1];			thisI.myFocus();								}				private function recreateHandler(e:Event):void		{			var recItem:item = e.target as item;			removeChild(recItem);			addChild(recItem);		}		private function mouseDownHandler(e:MouseEvent):void			{				var tI:item = e.currentTarget as item;				(e.altKey) ? switchFocus(tI) : null;				(e.altKey) ? switchFocus(e.target as item) : trace("CLICKED");			}		private function rightClickHandler(e:MouseEvent):void			{				var tI:item = e.target as item;				var locV:V2 = new V2(tI.x, tI.y);			}					private function switchFocus(tI:item):void		{						for each (var i:item in theItems){				(i.isFocus) ? i.myBlur() : null;			}						tI.myFocus();		}							}	}