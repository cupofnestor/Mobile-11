package com.mobile.GulfLinks {		import flash.events.*;	import flash.utils.Dictionary;		public class metaManager extends EventDispatcher {		//the world which will contain all Physical "Items" 		var world:thisWorld;		//Item vars		var focusItem:delItem; //this is the item that currently has focus, or null if no item has focus.				//Link Vars		var list:linkList; //this is the stage object to display the list of links.		var worldLinks:linkCollection = new linkCollection() //contains all visible links, and methods fot sorting						//constructor		public function metaManager(_world:thisWorld, _list:linkList) {			world = _world;			list = _list;		}				//must set feed to initialize data		public function set feed(_feed:XML):void		{			buildDict(_feed);		}				//builds the "Dictionaries"		private function buildDict(_feed:XML):void		{						//first, build dictionary of items			var allItems:Dictionary = new Dictionary();  //dictionary containing ALL items			for each (var tag:XML in _feed.taglist.tag)			{				var _t:String =tag.toString();				var _f:Number = tag.@freq;				var _i:delItem = new delItem();				_i._tag=_t;				_i._freq=_f;				allItems[_t] = _i; //put delItem ref in the all list			}			world.all = allItems;  //set the dictionary on the world.			allItems = null;						//then, list of links			var _allLinks:Array = new Array();			for each (var _l:XML in _feed.links.link)			{				var _link:link = new link(_l);				_allLinks.push(_link);			}			//all links start active for now.			worldLinks.links = _allLinks;			_allLinks = null;			dispatchEvent(new Event("loadComplete", true));		}								//main method to update objects based on a tag/Item which has "focus"		public function tagFocus(_t:String):void		{			world.focusTag = _t;			collection = worldLinks.linksByTag(_t);		}				public function set collection(val:Object):void		{						world.itemUpdate(val.tags);			//list.linkUpdate(val.links);		}				public function testCollection(_s:String):void		{			var _tmp:Object = worldLinks.linksByTag(_s);		}				//searches world links list, returning array of those which contain that tag									}	}