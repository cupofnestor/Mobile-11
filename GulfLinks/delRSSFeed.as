package com.mobile.GulfLinks {	import flash.net.*;	import flash.events.*;	public class delRSSFeed extends EventDispatcher{		var links:Array = new Array();		var feedReq:URLRequest;		var feedLoader:URLLoader=new URLLoader;		var reqVars:URLVariables = new URLVariables();		var domain:String="http://feeds.delicious.com"		var feedType:String="rss";		var feedVersion:String="v2";		//Add to config:		var uname:String="GulfLinks"		private var key:String = "085VSSvd8Id0nJhdJVpIEKMoRFU-"		private var count:int=int.MAX_VALUE;		private var feedUrl=domain+"/"+feedVersion+"/"+feedType+"/"+uname				public function delRSSFeed() {			// constructor code			buildRequest(feedUrl);		}				private function buildRequest(url):void		{			report("building request, url: "+url)			feedReq = new URLRequest(url);			reqVars.private=key;			reqVars.count=count;			feedReq.data = reqVars;			feedLoader.dataFormat=URLLoaderDataFormat.TEXT;			feedLoader.addEventListener(Event.COMPLETE, feedLoaded);           // feedLoader.addEventListener(Event.OPEN, openHandler);           // feedLoader.addEventListener(ProgressEvent.PROGRESS, progressHandler);           // feedLoader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);           // feedLoader.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);           // feedLoader.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);						try {                feedLoader.load(feedReq);            } catch (error:Error) {                report("Unable to load requested document."+error);            }					}				private function feedLoaded(e:Event):void		{			feedLoader.removeEventListener(Event.COMPLETE, feedLoaded);			var xFeed:XML = new XML(e.currentTarget.data);			report("feed loaded",1);			parseXMLFeed(xFeed);		}				private function parseXMLFeed(X:XML):void		{			for each (var item:XML in X.channel.item){				var tmpItem = new delRSSItem(item)				links.push(tmpItem);			}			dispatchEvent(new Event(Event.COMPLETE));		}				private function report(r:String, p:Number=0):void		{			(p>0) ? trace(r) : null;					}			}	}